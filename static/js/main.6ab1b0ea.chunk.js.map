{"version":3,"sources":["componenets/Captcha.js","componenets/Loginform.js","componenets/Signupform.js","componenets/Login.js","componenets/AuthSpotify.js","componenets/Spotify/SpotifySong.js","componenets/Spotify/SpotifyPlaylist.js","componenets/Spotify/CommonArtist.js","componenets/Spotify/SpotifyPlaylists.js","componenets/Spotify/SpotifySearch.js","componenets/Youtube/YoutubeSong.js","Icons/heart.png","componenets/Youtube/YoutubeChannelList.js","componenets/Youtube/YoutubeSearch.js","componenets/HomePage.js","componenets/UpdateUsername.js","componenets/UpdatePassword.js","componenets/DeleteAccount.js","componenets/UpdateName.js","componenets/AccountSettings.js","componenets/Spotify/SpotifySuccess.js","App.js","index.js"],"names":["cap_theme","Captcha","className","sitekey","onChange","value","console","log","theme","Loginform","history","useHistory","useState","username","setUsername","password","setPassword","response","setReponse","Form","onSubmit","event","axios","method","data","withCredentials","url","then","res","push","catch","err","message","JSON","stringify","Group","widths","Input","label","type","placeholder","name","evt","target","Button","Signupform","firstName","setFirstName","lastName","setLastName","retry","setRetry","Login","intent","setIntent","loginIsPositive","setLoginIsPostive","signupIsPositive","setSignupPositive","useEffect","handleChange","style","width","marginLeft","marginRight","marginTop","paddingRight","align","positive","onClick","Or","querystring","require","Spotifylogin","fullAuthLink","response_type","client_id","scope","redirect_uri","show_dialog","href","SpotifySong","props","List","Item","update","uri","Image","src","imageSrc","Content","artist","SpotifyPlaylist","Table","Row","Cell","singleLine","textAlign","tracks","CommonArtist","ResponsiveContainer","PieChart","height","Pie","artists","dataKey","nameKey","cx","cy","outerRadius","fill","midAngle","innerRadius","index","RADIAN","Math","PI","radius","x","cos","y","sin","color","textAnchor","dominantBaseline","SpotifyPlaylists","ui","celled","table","Header","HeaderCell","Body","playlists","SpotifySearch","search","setSearch","songs","setSongs","setPlaylists","currSongUri","setSongUri","tokens","setTokens","topArtists","setTopArtists","recentArtistSelected","setRecentArtistSelected","playlistSelected","setPlaylistSelected","getToken","headers","Authorization","searchSpotifySongs","getUsersRecentSongs","get","q","limit","items","forEach","element","id","album","images","currArtist","track","temp","i","floor","random","getRandomColor","getUserPlaylists","image","total","description","Grid","columns","Column","marginBottom","paddingLeft","negative","divided","verticalAlign","displayChart","token","uris","autoPlay","YoutubeSong","youtube_base","thumbnail","thumbnails","player_url","videoId","channelID","light","controls","updateChannel","left","five","wide","column","paddingTop","medium","class","wrapepd","alt","fontSize","fontWeight","channelTitle","YoutubeChannelList","title","YoutubeSearch","searchVideo","setSearchVideo","searchChannel","setSearchChannel","search_params","setYoutubeSearchVideo","videos","setvideos","currChannelId","setChannelId","channelVideoCache","YOUTUBE_API_KEY","default_search_url","query","maxResultsString","baseurl_video","baseurl_channel","parse_video_details","snippet","channelId","publishedAt","paddingBottom","inverted","primary","button","secondary","videoIdList","videoDetailsURL","default_video_details_url","displayChannelList","HomePage","spotifyIsPositive","setSpotifyIsPositive","youtubeIsPositive","setYoutubeIsPositive","user","setUser","options","key","text","icon","Menu","header","position","Dropdown","simple","item","UpdateUsername","setName","UpdatePassword","DeleteAccount","UpdateName","AccountSettings","selected","updateSelected","newSelect","pointing","vertical","SpotifySuccess","URL","window","location","searchParams","code","grant_type","client_secret","post","access_token","refresh_token","App","exact","path","AuthSpotify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ab1b0ea.chunk.js","sourcesContent":["import ReCAPTCHA from \"react-google-recaptcha\";\n// import React, {useState, useRef} from 'react';\n\n// Site theme may change if implemented. These booleans are placeholders for a future functionality\nconst dark_theme = false;\nconst light_theme = true;\nlet cap_theme = \"\"\n\nif (light_theme){\n  cap_theme = \"light\"\n}\nelse{\n  cap_theme = \"dark\"\n}\n\nconst Captcha = () => {\n  function onChange(value) {\n    console.log('Captcha value:', value);\n  }\n  return (\n    <div className=\"Captcha\">\n      <ReCAPTCHA\n        sitekey=\"6LfUBakcAAAAAGhxM1OFfCIatnj5EO9WlOYCklq0\"\n        onChange={onChange}\n        theme = {cap_theme}\n        // onExpire={handleExpire}\n      />\n    </div>\n  );\n};\nexport default Captcha;","import axios from 'axios';\nimport React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Captcha from './Captcha';\nimport { Form } from 'semantic-ui-react';\n\nconst Loginform = () => {\n    const history = useHistory();\n    // const reRef = useRef();\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [response, setReponse] = useState(\"\")\n\n\n    const loginAction = (event) =>{\n        if(username && password){\n            axios({\n                method: \"post\",\n                data: {\n                    username: username,\n                    password: password\n                },\n                withCredentials: true,\n                url:\"http://localhost:5000/login\"\n                \n            }).then( res => {\n                setReponse(res.data)\n\n                history.push(\"./HomePage\")\n            }).catch( err => {\n                if(err.message === \"Request failed with status code 401\"){\n                    setReponse(\"Failed login\")\n                }\n                else{\n                    setReponse(JSON.stringify(err))\n                }\n            })\n        }\n        else{\n            console.log(\"username or password not there\")\n        }\n    }\n\n    return(\n        <div>\n            <Form onSubmit={loginAction}>\n                <Form.Group widths = \"equal\"> \n                    <Form.Input label = \"Username\" type = \"text\" placeholder = \"Username\" name = \"username\" onChange = {(evt) => setUsername(evt.target.value)}/>\n                    <Form.Input label = \"Password\" type = \"password\" placeholder = \"Password\" name = \"password\" onChange = {(evt) => setPassword(evt.target.value)}/>   \n                </Form.Group>\n                <Captcha/>\n                <Form.Button type = \"submit\">Login!</Form.Button>\n            </Form>\n            <h1>{response}</h1>\n        </div>\n    )\n}\n\nexport default Loginform;","import axios from 'axios';\nimport React, {useState} from 'react';\nimport { Form } from 'semantic-ui-react'\nimport { useHistory } from 'react-router-dom';\n\nconst Signupform = () => {\n\n    const history = useHistory()\n\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [retry, setRetry] = useState(\"\")\n\n    const [response, setReponse] = useState(\"\")\n\n\n    const signUpAction = (event) => {\n        if(firstName && lastName && username && password && retry && password === retry){\n            // valid sign up \n            axios({\n                method: \"post\",\n                data: {\n                    name: firstName,\n                    username: username,\n                    password: password\n                },\n                withCredentials: true,\n                url:\"http://localhost:5000/register\"\n                \n            }).then( res => {\n                if(res.data == \"Success\"){\n                    history.push('/Spotify')\n                }\n                setReponse(res.data)\n            }).catch( err => {\n                setReponse(JSON.stringify(err))\n            })\n        }\n        else{\n            console.log(\"not valid\")\n        }\n    }\n\n    return(\n        <div>\n            <Form onSubmit = {signUpAction}>\n                <Form.Group widths = \"equal\"> \n                    <Form.Input label = \"First name\" placeholder = \"First name\" type = \"text\" name = \"first\" onChange = {(evt) => setFirstName(evt.target.value)}/>\n                    <Form.Input label = \"Last name\" placeholder = \"Last name\" type = \"text\" name = \"last\" onChange = {(evt) => setLastName(evt.target.value)}/>\n                </Form.Group>\n                <Form.Input label = \"Username\" type = \"text\" placeholder = \"Username\" name = \"username\" onChange = {(evt) => setUsername(evt.target.value)}/>\n                <Form.Input label = \"Password\" type = \"password\" placeholder = \"Password\" name = \"password\" onChange = {(evt) => setPassword(evt.target.value)}/>\n                <Form.Input label = \"Confirm Password\" type = \"password\" placeholder = \"Confirm Password\" onChange = {(evt) => setRetry(evt.target.value)}/>\n                <Form.Button type = \"submit\">Sign up!</Form.Button>\n            </Form>\n            <h1>{response}</h1>\n        </div>\n    )\n}\n\nexport default Signupform;","import React, {useState, useEffect} from 'react';\nimport Loginform  from './Loginform';\nimport Signupform from './Signupform';\nimport { Button } from 'semantic-ui-react'\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n    const history = useHistory();\n    const [intent, setIntent] = useState('Sign up');\n    const [loginIsPositive, setLoginIsPostive] = useState(false)\n    const [signupIsPositive, setSignupPositive] = useState(true)\n\n    useEffect( () => {\n        axios({\n            method: \"post\",\n            withCredentials: true,\n            url:\"http://localhost:5000/user\"\n        }).then( res => {\n            if(res.data != \"Cookie is invalid\"){\n                history.push('/HomePage')\n            }\n        })\n    }, [])\n\n    const handleChange = (event, intent) => {\n        setIntent(intent);\n\n        if(intent === \"Log in\"){\n            setLoginIsPostive(true)\n            setSignupPositive(false)\n        }\n        else{\n            setSignupPositive(true)\n            setLoginIsPostive(false)\n        }\n    }\n\n    const renderForm = () => {\n        if(intent === \"Log in\"){\n            return(<Loginform/>)\n        }\n        else{\n            return(<Signupform/>)\n        }\n    }\n    \n\n    return(\n        <div style = {{width: \"50%\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"10px\", \n                        paddingRight: \"1em\"}}>\n            <div align = \"center\">\n                <Button.Group>\n                    <Button positive = {signupIsPositive} onClick={ (event) => handleChange(event, \"Sign up\") } >Sign up</Button>\n                    <Button.Or />\n                    <Button positive = {loginIsPositive} onClick={ (event) => handleChange(event, \"Log in\") } >Login</Button>\n                </Button.Group>\n            </div>\n            {renderForm()}\n        </div>\n    )\n\n}\nexport default Login;","import React from 'react';\nconst querystring = require('querystring');\n\nconst Spotifylogin = () => {\n\n    const clientId = \"426327bb47284651ba7d3aac5790edc1\"\n    const redirect_uri = \"http://localhost:3000/spotify/success\";\n    const scope = 'user-read-private user-read-email streaming user-read-playback-state user-modify-playback-state user-read-recently-played ';\n\n    const fullAuthLink = 'https://accounts.spotify.com/authorize?' + \n        querystring.stringify({\n            response_type: 'code',\n            client_id: clientId,\n            scope: scope,\n            redirect_uri: redirect_uri,\n            show_dialog: true\n        })\n\n    return(\n        <div >\n            <h1>Gimme yo spotify data</h1>\n            <a href = {fullAuthLink}>\n                <button>Click meee</button>\n            </a>\n        </div>\n    )\n\n}\nexport default Spotifylogin;\n\n","import React from 'react';\nimport { List, Image } from 'semantic-ui-react'\n\nconst SpotifySong = (props) => {\n    return(\n        <List.Item  onClick = { () => props.update(props.uri)}> \n            <Image src = {props.imageSrc}/>\n            <List.Content>\n                <p>{props.name}</p> \n                <p>{props.artist}</p>    \n            </List.Content>\n            \n        </List.Item>\n    )\n\n}\nexport default SpotifySong;\n\n","import React from 'react';\r\nimport {List, Table} from 'semantic-ui-react';\r\n\r\nconst SpotifyPlaylist = (props) => {\r\n    return(\r\n        <Table.Row >\r\n            <Table.Cell singleLine textAlign='center'>\r\n                {props.name}\r\n            </Table.Cell>\r\n            <Table.Cell singleLine textAlign='center'>\r\n                {props.tracks}\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default SpotifyPlaylist;","import React from 'react';\nimport { PieChart , Pie, ResponsiveContainer } from 'recharts';\n\nconst CommonArtist = (props) => {\n\n    const label = ({cx, cy, midAngle, innerRadius, outerRadius, value, index}) => {\n      const RADIAN = Math.PI / 180;\n      // eslint-disable-next-line\n      const radius = 25 + innerRadius + (outerRadius - innerRadius);\n      // eslint-disable-next-line\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      // eslint-disable-next-line\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n      return (\n        <text\n          x={x}\n          y={y}\n          fill={props.artists[index].color}\n          textAnchor={x > cx ? \"start\" : \"end\"}\n          dominantBaseline=\"central\"\n        >\n          {props.artists[index].artist} ({value})\n        </text>\n      );\n    }\n    \n    return(\n        <ResponsiveContainer>\n            <PieChart width = \"500px\" height = \"500px\">\n            <Pie \n                data={props.artists} \n                dataKey=\"count\" \n                nameKey=\"artist\" \n                cx=\"50%\" \n                cy=\"35%\" \n                outerRadius={100}  \n                fill=\"#8884d8\"\n                label={label}\n            />\n            </PieChart>\n        </ResponsiveContainer>\n    )\n\n}\nexport default CommonArtist;","import React from 'react';\nimport { Table } from 'semantic-ui-react'\n\nconst SpotifyPlaylists = (props) => {\n    return(\n        <Table ui celled table>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Name</Table.HeaderCell>\n                    <Table.HeaderCell>Tracks</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {props.playlists}\n            </Table.Body>\n        </Table>\n    )\n\n}\nexport default SpotifyPlaylists;\n\n","import React, { useEffect, useState } from 'react';\nimport { Form, List, Grid, Dropdown, Button, Table } from 'semantic-ui-react';\nimport axios from 'axios'\nimport SpotifySong from './SpotifySong'\nimport SpotifyPlaylist from './SpotifyPlaylist'\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport CommonArtist from './CommonArtist';\nimport \"../Styles/styles.css\"\nimport SpotifyPlaylists from './SpotifyPlaylists';\nconst querystring = require('querystring');\n\nconst SpotifySearch = () => {\n\n    const [search, setSearch] = useState() \n    const [songs, setSongs] = useState([])\n    const [playlists, setPlaylists] = useState([])\n    const [currSongUri, setSongUri] = useState()\n    const [tokens, setTokens] = useState()\n    const [topArtists, setTopArtists] = useState([])\n    const [displayRecentSongs, setSearchVideo] = useState()\n    const [displayPlaylists, setdisplayPlaylists] = useState()\n    const [intent, setIntent] = useState(\"View Recent Artists\")\n    const [playlistImages, setPlaylistImages] = useState([])\n    const [recentArtistSelected, setRecentArtistSelected] = useState(true)\n    const [playlistSelected, setPlaylistSelected] = useState(false)\n\n    const getRandomColor = () => {\n        var letters = '0123456789ABCDEF';\n        var color = '#';\n        for (var i = 0; i < 6; i++) {\n          color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    }\n\n    const getToken = () => {\n        if(!tokens){\n            axios({\n                method: \"get\",\n                withCredentials: true,\n                url:\"http://localhost:5000/spotify_accessToken\"\n            }).then( res => {\n                setTokens()\n                if(res.data != \"Error\"){\n                    setTokens(res.data)\n                }\n                else{\n                    console.log(\"error\")\n                }\n            })\n        }\n        else{\n            const headers = {\n                headers: {\n                'Accept': 'application/json',\n                Authorization: 'Bearer ' + tokens,\n                }\n            };\n            searchSpotifySongs(headers)\n            getUsersRecentSongs(headers)\n        }\n    }\n\n    const searchSpotifySongs = (headers) => {\n        axios.get(\"https://api.spotify.com/v1/search?\" + \n            querystring.stringify({\n                q: search,\n                type: \"track\",\n                limit: 8\n        }), headers)\n        .then(response => \n            {\n                setSongs([])\n                response.data.tracks.items.forEach(element => {\n                    setSongs( songs => [...songs,<SpotifySong name = {element.name} id = {element.id} uri = {element.uri} \n                        artist = {element.artists[0].name} key = {element.id} update = { setSongUri } \n                        imageSrc = {element.album.images[2].url} /> ])\n                })\n            }).catch( err => {\n                setTokens()\n                getToken()\n                searchSpotifySongs(headers);\n            })\n    }\n\n    const getUsersRecentSongs = (headers) => {\n        axios.get(\"https://api.spotify.com/v1/me/player/recently-played\", headers).then( res => {\n\n            console.log(res)\n\n            setTopArtists([])\n            // console.log(\"songs\", res)\n            let artists = {} \n            res.data.items.forEach( element => {\n                const currArtist = element.track.artists[0].name\n            artists[currArtist] =  1 + (artists[currArtist] || 0)\n            })\n      \n            for(const artist in artists){\n                let temp = {} \n                temp[\"artist\"] = artist\n                temp[\"count\"] = artists[artist]\n                temp[\"color\"] = getRandomColor()\n                setTopArtists( topArtists => [...topArtists, temp])\n            }\n        })\n    }\n\n    const getUserPlaylists = (headers) =>{\n        axios.get(\"https://api.spotify.com/v1/me/playlists\", headers\n        \n        ).then( res => {\n\n            // console.log(\"Playlist Objects\", res)\n\n            setPlaylists([])\n            res.data.items.forEach(element => {\n                console.log(element.name)\n                setPlaylists( playlists => [...playlists,<SpotifyPlaylist name = {element.name} image = {element.images[0].url} \n                    tracks = {element.tracks.total} description = {element.description}/>])\n            })\n        }).catch( err => {\n            // console.log(err)\n            setTokens()\n            getToken()\n            getUserPlaylists(headers);\n        })\n        // console.log(playlists);\n    }\n\n    \n    useEffect( () => {\n        if(tokens){\n            const headers = {\n                headers: {\n                'Accept': 'application/json',\n                Authorization: 'Bearer ' + tokens,\n                }\n            };\n            searchSpotifySongs(headers)\n            getUsersRecentSongs(headers)\n            getUserPlaylists(headers)\n        }\n    }, [tokens])\n\n    const displaySpotify = () =>{\n        if(tokens && currSongUri){\n           return  <SpotifyPlayer token={tokens} uris={currSongUri} autoPlay = {true} /> \n        }\n        else if(!tokens){\n          return <h1>Needs a valid token.</h1>\n        }\n        else{ \n          return <h1></h1>\n        }\n      }\n\n    const handleChange = (event, intent) => {\n        setIntent(intent);\n\n        if(intent === \"View Recent Artists\"){\n            setRecentArtistSelected(true)\n            setPlaylistSelected(false)\n        }\n        else{\n            setRecentArtistSelected(false)\n            setPlaylistSelected(true)\n        }\n    }\n    const displayChart = () =>{\n        if(tokens){\n            if(intent === \"View Recent Artists\"){\n                return(\n                    <CommonArtist artists = {topArtists}/> \n                )\n            }\n            else{\n                return(\n                    <SpotifyPlaylists playlists = {playlists}/>\n                )\n            }\n        }\n    }\n    return(\n        <div style={{marginLeft:\"9%\", marginRight:\"9%\"}}>\n\n            <Form onSubmit={getToken}>\n                <Form.Group widths = \"equal\"> \n                    <Form.Input label = \"Search\" type = \"text\" placeholder = \"Search Spotify\" \n                    name = \"spotify\" onChange = {(evt) => setSearch(evt.target.value)}/> \n                </Form.Group>\n                <Grid>\n                    <Grid.Row columns = {2}>\n                        <Grid.Column>\n                            <Form.Button type = \"submit\" style={{marginBottom:\"1em\"}} >Search</Form.Button>\n                        </Grid.Column>\n                        <Grid.Column style={{paddingLeft:\"13%\"}}>\n                            <Button.Group>\n                                <Button positive = {recentArtistSelected} onClick={ (event) => handleChange(event, \"View Recent Artists\") } >View Recent Artists</Button>\n                                <Button.Or />\n                                <Button negative = {playlistSelected} onClick={ (event) => handleChange(event, \"View Playlist\") }> View Playlist</Button>\n                            </Button.Group>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Form>  \n            <Grid>\n                <Grid.Row columns = {2}>\n                    <Grid.Column>\n                        <List divided verticalAlign='middle'>\n                            {songs}\n                        </List>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <Grid>\n                            <Grid.Row style={{height: \"390px\"}}>{displayChart()}</Grid.Row>\n                            <Grid.Row style={{marginRight: \"20px\"}}>{displaySpotify()}</Grid.Row>\n                        </Grid>      \n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </div>\n    )\n\n}\nexport default SpotifySearch;","import React from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport { List, Image, Grid, Container } from 'semantic-ui-react'\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport heart from \"../../Icons/heart.png\"\r\nimport playlist from \"../../Icons/playlist_black.png\"\r\nimport Button from '@restart/ui/esm/Button';\r\n\r\nconst YoutubeSong = (props) => {\r\n    const youtube_base = \"https://www.youtube.com/embed/\"\r\n    const thumbnail = props.thumbnails\r\n    const height = thumbnail.height\r\n    const width = thumbnail.width\r\n    const src = thumbnail.url\r\n    const player_url = youtube_base  + props.videoId\r\n    const channel_url = youtube_base + \"channel/\" + props.channelID\r\n    // onClick = { () => props.update(props.uri)}\r\n    const typeDetermination = () => {\r\n        // <Grid columns={4} className=\"bar\"\r\n        //                         style={{width:\"99.9%\", height:\"14%\", marginTop:\"-1px\", marginLeft:\".05%\"}} >\r\n        //                         <Grid.Row celled>\r\n        //                         <Grid.Column></Grid.Column>\r\n        //                             <Grid.Column>\r\n        //                                 <Button type=\"submit\" name=\"playlist-button\" class=\"ui submit button\">\r\n        //                                     <img src={playlist} alt=\"\"/>\r\n        //                                 </Button>\r\n        //                             </Grid.Column>\r\n        //                             <Grid.Column>\r\n        //                             <Button type=\"submit\" name=\"heart-button\" class=\"ui submit button\"\r\n        //                             onClick = { () => props.update(\"Bro\")}>\r\n        //                                 <img src={playlist} alt=\"\"/>\r\n        //                             </Button>\r\n        //                             </Grid.Column>\r\n        //                             <Grid.Column style={{paddingTop:\"3em\"}}>\r\n        //                             </Grid.Column>\r\n        //                         </Grid.Row>\r\n        //                     </Grid>\r\n        if (props.intent === \"Search Video\"){\r\n            return(\r\n                <div>\r\n                    <List.Item style={{marginTop:\"1em\"}}> \r\n                        <List.Content>\r\n                                <ReactPlayer url={player_url} style={{width:\"100%\"}} \r\n                                    light={false} \r\n                                    controls={true} />\r\n                        </List.Content>\r\n                    </List.Item>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            // <Image size=\"medium\" circular src={thumbnail.medium.url}/>\r\n            console.log(\"Channel Id:\", props.channelID)\r\n            return(\r\n                <div>\r\n                    <List.Item onClick = { () => props.updateChannel(props.channelID)}> \r\n                        <Grid columns={2} width=\"100%\">\r\n                            <Grid.Row celled>\r\n                                <Grid.Column left five wide column style={{paddingTop:\"1em\"}}>\r\n                                    <img src={thumbnail.medium.url} class=\"ui medium circular image\" wrapepd alt=\"\"/>\r\n                                </Grid.Column>\r\n                                <Grid.Column style={{paddingTop:\"3em\"}}>\r\n                                    <p style={{fontSize:\"18px\", fontWeight:\"bold\"}}>{props.channelTitle}</p>\r\n                                    <p style={{fontSize:\"15px\"}}>{props.description}</p>\r\n                                </Grid.Column>\r\n                            </Grid.Row>\r\n                        </Grid>\r\n                    </List.Item>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return(\r\n        <div width=\"100%\">\r\n            {typeDetermination()}\r\n        </div>\r\n    )\r\n}\r\nexport default YoutubeSong;","export default __webpack_public_path__ + \"static/media/heart.1e4f827e.png\";","import React from 'react';\nimport { List, Image } from 'semantic-ui-react'\n\nconst YoutubeChannelList = (props) => {\n    console.log(props.title, props.name)\n    return(\n        <List.Item > \n            <List.Content>\n                <p>{props.title}</p> \n                <p>{props.name}</p>    \n            </List.Content>\n        </List.Item>\n    )\n}\nexport default YoutubeChannelList;\n\n","import React, { useState, setState } from 'react';\r\nimport { Form, List, Grid, Image, Button } from 'semantic-ui-react';\r\nimport axios from 'axios'\r\nimport YoutubeSong from './YoutubeSong';\r\nimport \"../Styles/styles.css\"\r\nimport YoutubePlaylist from './YoutubePlaylist'\r\nimport YoutubeChannelList from './YoutubeChannelList'\r\nimport YouTubePlayer from 'react-player/youtube';\r\n// import YTSearch from 'youtube-api-search';\r\n// import YoutubeGetData from './YoutubeGetData'\r\n\r\n\r\n\r\nconst YoutubeSearch = () => {\r\n    const [response, setReponse] = useState(\"\")\r\n    const [searchVideo, setSearchVideo] = useState(\"\")\r\n    const [searchChannel, setSearchChannel] = useState(\"\")\r\n    const [intent, setIntent] = useState('Search Video');\r\n    const [search_params, setYoutubeSearchVideo] = useState([])\r\n    const [videos, setvideos] = useState([])\r\n    const [channelVideoList, setChannelVideoList] = useState([])\r\n    const [currChannelId, setChannelId] = useState()\r\n    const [currSongUrl, setSongUri] = useState()\r\n    const [currChannelName, setCurrChannelName] = useState()\r\n    const [channelVideoCache, setChannelVideoCache] = useState({})\r\n\r\n    const WATCH_URL = \"https://www.youtube.com/watch?v=\";\r\n        // old api key = AIzaSyDKmSJpeUk029A3eJfRD-tgefJ9D4XFF7I\r\n    const YOUTUBE_API_KEY = \"AIzaSyCOVCCGsybib6c8MJE8p1dSNtAQcn7hQmM\";\r\n    const default_video_details_url  = \"https://www.googleapis.com/youtube/v3/videos?\"\r\n    const default_search_url = \"https://www.googleapis.com/youtube/v3/search?part=snippet&key=\" + YOUTUBE_API_KEY + \"&\";\r\n    const default_channel_url = \"https://www.googleapis.com/youtube/v3/search?key=\" + YOUTUBE_API_KEY + \"&part=snippet,id&order=date&maxResults=1&channelId=\"\r\n    const query = \"q=\" + search_params;\r\n    const maxResultsString = \"maxResults=\";\r\n    const desiredMaxResults = \"1\";\r\n    const baseurl_video =  default_search_url + maxResultsString + desiredMaxResults + \"&type=video&\" + query\r\n    const baseurl_channel =  default_search_url + maxResultsString + desiredMaxResults + \"&type=channel&\" + query\r\n\r\n\r\n    \r\n    const parse_video_details = (res) => {\r\n        setvideos([])\r\n        res.data.items.forEach(element => {\r\n            setvideos( videos => [...videos,<YoutubeSong name = {element.snippet.name} id = {element.id.videoId} \r\n                    uri = {WATCH_URL + element.id.videoId} channelTitle = {element.channelTitle} intent = {intent}\r\n                    channelID = {element.snippet.channelId} videoId = {element.id.videoId} update = { setSongUri } \r\n                    description = {element.snippet.description} imageSrc = {element.snippet.thumbnails} updateChannel = {setChannelId}\r\n                    thumbnails = {element.snippet.thumbnails} title = {element.snippet.title} \r\n                    publishedAt = {element.snippet.publishedAt}/>])\r\n        },\r\n        res.data.items.forEach(element =>{\r\n            if(element.id.videoId){\r\n                console.log(\"Video found with id:\", element.id.videoId)\r\n            }\r\n            else{\r\n                console.log(\"Returns a channel:\", element.id.channelTitle)\r\n            }\r\n        })\r\n        );\r\n        \r\n    }\r\n    const displayChannelList = () =>{\r\n        if(currChannelId){\r\n            var videoIdList = []\r\n            console.log(\"Channel url:\", currChannelId)\r\n            var url = default_channel_url + currChannelId\r\n            axios({\r\n                url: url,\r\n                method: 'GET'\r\n            }).then(res => {\r\n\r\n                res.data.items.forEach(element => {\r\n                    videoIdList.push(element.id.videoId)\r\n                    if (channelVideoCache[currChannelId] === element.id.videoId){\r\n                        console.log(\"dont need to cache\")\r\n                    }\r\n                    else{\r\n                        channelVideoCache[currChannelId] = element.id.videoId;\r\n                    }\r\n                })\r\n                // setState({ setChannelId : null })\r\n            }).catch( err => {\r\n                console.log(err)\r\n            })\r\n\r\n            var videoDetailsURL = default_video_details_url + \"part=snippet&key=\" + YOUTUBE_API_KEY + \"&\"\r\n            console.log(\"Video detail url:\", videoDetailsURL)\r\n            \r\n            videoIdList.forEach(element => {\r\n                console.log(\"Element:\", element)\r\n                axios({\r\n                    url: videoDetailsURL + element,\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    console.log(\"title:\", element.snippet.title)\r\n                    setvideos( videos => [...videos,<YoutubeChannelList title = {element.snippet.title}\r\n                        publishedAt = {element.snippet.publishedAt} />])\r\n                })\r\n            })\r\n            return(\r\n                <YoutubeChannelList />\r\n            )\r\n        }\r\n      }\r\n      \r\n    const search_triggered = () => {\r\n        if(search_params){\r\n            if (intent === \"Search Video\"){\r\n                axios({\r\n                    url: baseurl_video,\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    parse_video_details(res);\r\n                    console.log(\"searched for video\");\r\n                    console.log(res);\r\n                }).catch( err => {\r\n                    console.log(err)\r\n                })\r\n            }\r\n            else{\r\n                axios({\r\n                    url: baseurl_channel,\r\n                    method: 'GET'\r\n                }).then(res => {\r\n                    parse_video_details(res);\r\n                    console.log(\"searched for video\");\r\n                    console.log(res);\r\n                }).catch( err => {\r\n                    console.log(err)\r\n                })\r\n            }\r\n        }\r\n    }   \r\n\r\n\r\n    // Determines whether the user wants to search for videos or channels. Sets state.\r\n    const handleChange = (event, intent) => {\r\n        setIntent(intent);\r\n\r\n        if(intent === \"Search Video\"){\r\n            setSearchVideo(true)\r\n            setSearchChannel(false)\r\n        }\r\n        else{\r\n            setSearchVideo(false)\r\n            setSearchChannel(true)\r\n        }\r\n    }\r\n\r\n    const handleSearch = (value) => {\r\n        if(setSearchVideo){\r\n            setYoutubeSearchVideo(value)\r\n        }\r\n        else if(setSearchChannel){\r\n            \r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div style={{marginLeft:\"9%\", marginRight:\"9%\"}}>\r\n            <Form onSubmit={search_triggered}>\r\n            <Grid style={{paddingTop:\"2em\", paddingBottom:\"2em\", marginLeft:\"1px\"}}>\r\n                <Button inverted primary button type = {searchVideo} onClick={ (event) => handleChange(event, \"Search Video\") } style={{marginRight:\"2em\"}}>Search For Video</Button>\r\n                <Button inverted secondary button type = {searchChannel} onClick={ (event) => handleChange(event, \"Search Channel\") } >Search For Channel</Button>\r\n            </Grid>\r\n                <Form.Group widths = \"equal\"> \r\n                    <Form.Input type = \"text\" placeholder = \"Search Youtube\" name = \"search_params\" onChange = {(evt) => handleSearch(evt.target.value)}/> \r\n                </Form.Group>\r\n            </Form>\r\n            <Grid>\r\n                <Grid.Row columns = {2}>\r\n                    <Grid.Column>\r\n                        <List divided verticalAlign='middle'>\r\n                            {videos}\r\n                        </List>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Grid>\r\n                            {/* <Grid.Row style={{marginRight: \"500px\"}}>{displayPlaylist()}</Grid.Row> */}\r\n                            <Grid.Row style={{marginRight: \"20px\"}}>{displayChannelList()}</Grid.Row>\r\n                        </Grid>      \r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default YoutubeSearch;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Dropdown, Menu } from 'semantic-ui-react';\nimport axios from 'axios'\nimport { Button } from 'semantic-ui-react'\nimport SpotifySearch from './Spotify/SpotifySearch';\nimport YoutubeSearch from './Youtube/YoutubeSearch';\nimport \"./Styles/styles.css\";\n\n\nconst HomePage= () => {\n\n    const [response, setReponse] = useState(\"\")\n    const [intent, setIntent] = useState('Search Spotify');\n    const [spotifyIsPositive, setSpotifyIsPositive] = useState(true)\n    const [youtubeIsPositive, setYoutubeIsPositive] = useState(false)\n\n    const [yt_search, setYoutubeSearch] = useState(\"\")\n\n\n    // On change effects, search bar and more.\n    const handleChange = (event, intent) => {\n        setIntent(intent);\n\n        if(intent === \"Search Spotify\"){\n            setSpotifyIsPositive(true)\n            setYoutubeIsPositive(false)\n        }\n        else{\n            setYoutubeIsPositive(true)\n            setSpotifyIsPositive(false)\n        }\n    }\n\n    const renderForm = () => {\n        if(intent === \"Search Spotify\"){\n            return(<SpotifySearch/>)\n        }\n        else{\n            return(<YoutubeSearch/>)\n        }\n\n    }\n\n\n    // Account information Dropdown\n    const history = useHistory();\n\n    const redirectSettings = () => {\n        history.push(\"./account\")\n    }\n\n    const logout = () => {\n        axios({\n            method: \"post\",\n            withCredentials: true,\n            url:\"http://localhost:5000/logout\"\n        }).then( res => {\n            if(res.data === \"success\"){\n                history.push(\"/\")\n            }\n        })\n    }\n\n    const [user, setUser] = useState(\"\") \n    \n    useEffect( () => {\n        axios({\n            method: \"post\",\n            withCredentials: true,\n            url:\"http://localhost:5000/user\"\n        }).then( res => {\n            if(res.data == \"Cookie is invalid\"){\n                history.push('/')\n            }\n            setUser(res.data)\n        })\n    }, [])\n\n    const options = [\n        { key: 1, text: 'Settings', value: 1, icon: 'settings', onClick: redirectSettings},\n        { key: 2, text: 'Logout', value: 2, icon: 'log out', onClick: logout}, \n      ]\n\n    return(\n        <div>\n            <Menu>\n                <Menu.Item header position=\"left\"> \n                    <h1>Welcome to our App {user.name}   {response}</h1>\n                </Menu.Item>\n                <Menu.Item style={{marginLeft:\"-5%\"}}></Menu.Item>\n                <Menu.Item position = \"center\" >\n                    <div>\n                        <Button.Group>\n                            <Button positive = {spotifyIsPositive} onClick={ (event) => handleChange(event, \"Search Spotify\") } >Search Spotify</Button>\n                            <Button.Or />\n                            <Button negative = {youtubeIsPositive} onClick={ (event) => handleChange(event, \"Search Youtube\") } >Search Youtube</Button>\n                        </Button.Group>\n                    </div>\n                </Menu.Item>\n                <Menu.Item position = \"right\">\n                    <Dropdown text = \"Account Info\" options = {options} simple item />\n                </Menu.Item> \n            </Menu>\n            {renderForm()}\n        </div>\n    )\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Form } from 'semantic-ui-react';\n\n\nconst UpdateUsername = () => {\n\n    const [name, setName] = useState(\"\")\n    const [response, setReponse] = useState(\"\")\n\n    const submitAction = () => {\n        if(name){\n            axios({\n                method: \"post\",\n                data: {\n                    name: name,\n                },\n                withCredentials: true,\n                url:\"http://localhost:5000/edit_username\"\n            }).then( res => {\n                setReponse(res.data)\n            }).catch( err => {\n                setReponse(JSON.stringify(err))\n            })\n        }\n        else{\n            setReponse(\"No name input!\")\n        }\n    }\n\n    return(\n        <div>\n            <h1>Update Username</h1>\n            <Form onSubmit ={submitAction}>\n                <Form.Group>\n                    <Form.Input label = \"Change Username\" type=\"text\" placeholder=\"New Name\" name = \"name\" onChange = {(evt) => setName(evt.target.value)}/>  \n                </Form.Group>\n                <Form.Button type = \"submit\">Submit Username Change!</Form.Button>\n            </Form>\n            <h1>{response}</h1>\n        </div>\n    )\n}\n\nexport default UpdateUsername;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Form } from 'semantic-ui-react';\n\n\nconst UpdatePassword = () => {\n\n    const [password, setPassword] = useState(\"\")\n    const [response, setReponse] = useState(\"\")\n\n    const submitAction = () => {\n        if(password){\n            axios({\n                method: \"post\",\n                data: {\n                    password: password\n                },\n                withCredentials: true,\n                url:\"http://localhost:5000/edit_password\"\n                \n            }).then( res => {\n                setReponse(res.data)\n            }).catch( err => {\n                setReponse(JSON.stringify(err))\n            })\n        }\n        else{\n            setReponse(\"No password!\")\n        }\n    }\n\n    return(\n        <div>\n            <h1>Update Password</h1>\n            <Form onSubmit={submitAction}>\n                <Form.Group>\n                    <Form.Input label = \"Change Password\" type=\"text\" placeholder=\"New Password\" name = \"password\" onChange = {(evt) => setPassword(evt.target.value)}/>\n                </Form.Group>\n                <Form.Button type = \"submit\">Submit Password Change!</Form.Button>\n            </Form>\n            <h1>{response}</h1>\n        </div>\n    )\n}\n\nexport default UpdatePassword;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react'\nimport axios from 'axios';\n\n\nconst DeleteAccount = () => {\n\n    const history = useHistory()\n    const [response, setReponse] = useState(\"\")\n\n    const deleteAccount = () => {\n        axios({\n            method: \"post\",\n            withCredentials: true,\n            url:\"http://localhost:5000/delete_user\"\n        }).then( res => {\n            console.log(res.data)\n            if(res.data === \"sucess\"){\n                history.push(\"/\")\n            }\n        }).catch( err => {\n            setReponse(JSON.stringify(err))\n        })\n    }\n\n    return(\n        <div>\n            <h1>Delete Account</h1>\n            <Button onClick = {deleteAccount}>ARE YOU SURE?????</Button>\n            {response}\n        </div>\n    )\n}\n\nexport default DeleteAccount;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Form } from 'semantic-ui-react';\n\n\nconst UpdateName = () => {\n\n    const [name, setName] = useState(\"\")\n    const [response, setReponse] = useState(\"\")\n\n    const submitAction = () => {\n        if(name){\n            axios({\n                method: \"post\",\n                data: {\n                    name: name\n                },\n                withCredentials: true,\n                url:\"http://localhost:5000/edit_name\"\n                \n            }).then( res => {\n                setReponse(res.data)\n            }).catch( err => {\n                setReponse(JSON.stringify(err))\n            })\n        }\n        else{\n            setReponse(\"No Name!\")\n        }\n    }\n\n    return(\n        <div>\n            <h1>Update Name</h1>\n            <Form onSubmit={submitAction}>\n                <Form.Group>\n                    <Form.Input label = \"Change Name\" type=\"text\" placeholder=\"New Name\" name = \"name\" onChange = {(evt) => setName(evt.target.value)}/>\n                </Form.Group>\n                <Form.Button type = \"submit\">Submit Name Change!</Form.Button>\n            </Form>\n            <h1>{response}</h1>\n        </div>\n    )\n}\n\nexport default UpdateName;","import React, { useState } from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport UpdateUsername from './UpdateUsername';\r\nimport UpdatePassword from './UpdatePassword';\r\nimport DeleteAccount from './DeleteAccount';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UpdateName from './UpdateName';\r\n\r\nconst AccountSettings= () => {\r\n\r\n    const history = useHistory() \r\n\r\n    const [selected, updateSelected] = useState(\"username\")\r\n\r\n    const handleChange = (event, newSelect) => {\r\n        updateSelected(newSelect)\r\n    } \r\n\r\n    const renderForm = () => {\r\n        if(selected === \"name\"){\r\n            return(<UpdateName/>)\r\n        }\r\n        else if(selected === \"username\"){\r\n            return(<UpdateUsername/>)\r\n        }\r\n        else if(selected === \"password\"){\r\n            return(<UpdatePassword/>)\r\n        }\r\n        else if(selected === \"delete\"){\r\n            return(<DeleteAccount/>)\r\n        }\r\n        else if(selected === \"back\"){\r\n            history.push(\"/HomePage\")\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Menu pointing vertical>\r\n                <Menu.Item name = \"update name\" onClick = {(evt) => handleChange(evt, \"name\")}/>\r\n                <Menu.Item name = \"update username\" onClick = {(evt) => handleChange(evt, \"username\")} />\r\n                <Menu.Item name = \"update password\" onClick = {(evt) => handleChange(evt, \"password\")}/>\r\n                <Menu.Item name = \"delete account\" onClick = {(evt) => handleChange(evt, \"delete\")}/>\r\n                <Menu.Item name = \"go back\" onClick = {(evt) => handleChange(evt, \"back\")}/>\r\n            </Menu>\r\n            {renderForm()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountSettings;","import React, {useState} from 'react';\nimport { useHistory} from 'react-router-dom';\nimport axios from 'axios';\n\n\nconst querystring = require('querystring');\n\nconst SpotifySuccess = () => {\n\n    const history = useHistory();\n\n    const clientId = \"426327bb47284651ba7d3aac5790edc1\";\n    const clientSecret = \"e418005aab42495587ced18596035912\"\n\n    const url  = new URL(window.location.href);\n\n    const error = url.searchParams.get('error');\n\n    if(error){\n        history.push('./')\n    }\n\n    const code = url.searchParams.get('code');\n\n    const getToken = () => {\n\n      const headers = {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        }\n      };\n\n      let data = {\n        grant_type: \"authorization_code\",\n        code: code,\n        redirect_uri: \"http://localhost:3000/spotify/success\",\n        client_id: clientId,\n        client_secret: clientSecret,\n      };\n\n      axios.post(\"https://accounts.spotify.com/api/token\", querystring.stringify(data), headers).then( res => {\n        console.log(res)\n        axios({\n          method: \"post\",\n          data:{\n            access_token: res.data.access_token,\n            refresh_token: res.data.refresh_token\n          },\n          withCredentials: true,\n          url:\"http://localhost:5000/spotifyInit\"\n        }).then( response => {\n          if(response.data === \"Success\"){\n            history.push('../HomePage')\n          }\n        })\n      })\n    }\n\n  return(\n    <div>\n      <h1>Freee dataaaaa</h1>\n      <button onClick = {getToken}>Get Token</button>\n    </div>\n  )\n\n}\nexport default SpotifySuccess;\n\n","import './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport Login from './componenets/Login'\r\nimport AuthSpotify from './componenets/AuthSpotify'\r\nimport HomePage from './componenets/HomePage';\r\nimport AccountSettings from './componenets/AccountSettings';\r\nimport SpotifySuccess from './componenets/Spotify/SpotifySuccess';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login/>\r\n          </Route>\r\n          <Route exact path=\"/spotify\">\r\n            <AuthSpotify/>\r\n          </Route>\r\n          <Route exact path ='/spotify/success'>\r\n            <SpotifySuccess/>\r\n          </Route>\r\n          <Route exact path=\"/account\">\r\n            <AccountSettings/>\r\n          </Route>\r\n          <Route exact path=\"/HomePage\">\r\n            <HomePage/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}